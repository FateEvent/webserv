/*
HTTP/1.1 200 OK\r\n
Content-Type: text/plain\r\n
Transfer-Encoding: chunked\r\n
\r\n
27\r\n
Voici les donn√©es du premier morceau\r\n\r\n
1C\r\n
et voici un second morceau\r\n\r\n
20\r\n
et voici deux derniers morceaux \r\n
12\r\n
sans saut de ligne\r\n
0\r\n
\r\n
*/

#include <string>
#include <cmath>
#include <iostream>

size_t	getMaxPower(std::string hex)
{
	size_t	i;

	i = 0;
	while (hex[i])
	{
		if ((hex[i] >= 48 && hex[i] <= 57)
			|| (hex[i] >= 65 && hex[i] <= 70)
			|| (hex[i] >= 97 && hex[i] <= 102))
			i++;
		else
			break ;
	}
	--i;
	return (i);
}

ssize_t	hexAndHappy(std::string hex)
{
	size_t  i;
	size_t  power;
	ssize_t count;

	i = 0;
	count = 0;
	power = getMaxPower(hex);
	while (power >= 0)
	{
		if (hex[i] >= 97 && hex[i] <= 102)
			hex[i] -= 32;
		if (hex[i] >= 48 && hex[i] <= 57)
			count += (hex[i] - '0') * pow(16, power);
		else if (hex[i] >= 65 && hex[i] <= 70)
			count += (10 + hex[i] - 'A') * pow(16, power);
		else
			break ;
		power--;
		i++;
	}
	return (count);
}

int	main()
{
	std::cout << hexAndHappy("12") << std::endl;
}